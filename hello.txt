.text
main:
    push    {r4, r5, r6, lr}
    sub sp, sp, #20           
    add     r0, sp, #0           

    movs    r1, #20             
    str     r1, [r0]
    movs    r1, #10
    str     r1, [r0, #4]
    movs    r1, #30
    str     r1, [r0, #8]
    movs    r1, #5
    str     r1, [r0, #12]
    mov     r1, lr
    str     r1, [r0, #16]

    mov     r0, sp             
    movs    r1, #5            

    bl      sort             

    add     sp, sp, #20     
    pop     {r4, r5, r6, pc} 
	
	mov r11, #10
	

sort:
    push    {r4, r5, r6, lr} 

    movs    r2, #0               

loop_outer:
    cmp     r2, r1                
    bge     exit_sort             

    mov     r3, r2              
    sub     r3, r3, #1         

loop_inner:
    cmp     r3, #0            
    blt     update_i         

    lsl     r4, r3, #2      
    add     r4, r0, r4     
    ldr     r5, [r4]      
    ldr     r6, [r4, #4]  

    cmp     r5, r6       
    blt     update_j    

    bl      swap

update_j:
    subs    r3, r3, #1 
    b       loop_inner

update_i:
    adds    r2, r2, #1
    b       loop_outer

swap:
    str     r6, [r4]              
    str     r5, [r4, #4]          
    bx      lr                   

exit_sort:
    pop     {r4, r5, r6, lr}    
    bx      lr
